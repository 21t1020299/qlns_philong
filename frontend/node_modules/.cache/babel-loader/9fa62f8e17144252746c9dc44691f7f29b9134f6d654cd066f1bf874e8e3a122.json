{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'https://qlns-philong.onrender.com';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Employee API\nexport const employeeAPI={// Get all employees with pagination\ngetEmployees:async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let search=arguments.length>2?arguments[2]:undefined;const params=new URLSearchParams({page:page.toString(),size:size.toString()});if(search){params.append('search',search);}const response=await api.get(`/api/employees/?${params}`);return response.data;},// Get employee by ID\ngetEmployee:async id=>{const response=await api.get(`/api/employees/${id}`);return response.data;},// Create new employee\ncreateEmployee:async data=>{const response=await api.post('/api/employees/',data);return response.data;},// Update employee\nupdateEmployee:async(id,data)=>{const response=await api.put(`/api/employees/${id}`,data);return response.data;},// Delete employee\ndeleteEmployee:async id=>{await api.delete(`/api/employees/${id}`);},// Get employee statistics\ngetStats:async()=>{const response=await api.get('/api/employees/stats');return response.data;}};// Health check\nexport const healthAPI={check:async()=>{const response=await api.get('/health');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","employeeAPI","getEmployees","page","arguments","length","undefined","size","search","params","URLSearchParams","toString","append","response","get","data","getEmployee","id","createEmployee","post","updateEmployee","put","deleteEmployee","delete","getStats","healthAPI","check"],"sources":["/Users/jayceho/qlns_philong/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Employee, EmployeeFormData, EmployeeListResponse, EmployeeStats } from '../types/employee';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://qlns-philong.onrender.com';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Employee API\nexport const employeeAPI = {\n  // Get all employees with pagination\n  getEmployees: async (page: number = 1, size: number = 10, search?: string) => {\n    const params = new URLSearchParams({\n      page: page.toString(),\n      size: size.toString(),\n    });\n    \n    if (search) {\n      params.append('search', search);\n    }\n    \n    const response = await api.get<EmployeeListResponse>(`/api/employees/?${params}`);\n    return response.data;\n  },\n\n  // Get employee by ID\n  getEmployee: async (id: string) => {\n    const response = await api.get<Employee>(`/api/employees/${id}`);\n    return response.data;\n  },\n\n  // Create new employee\n  createEmployee: async (data: EmployeeFormData) => {\n    const response = await api.post<Employee>('/api/employees/', data);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (id: string, data: Partial<EmployeeFormData>) => {\n    const response = await api.put<Employee>(`/api/employees/${id}`, data);\n    return response.data;\n  },\n\n  // Delete employee\n  deleteEmployee: async (id: string) => {\n    await api.delete(`/api/employees/${id}`);\n  },\n\n  // Get employee statistics\n  getStats: async () => {\n    const response = await api.get<EmployeeStats>('/api/employees/stats');\n    return response.data;\n  },\n};\n\n// Health check\nexport const healthAPI = {\n  check: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,mCAAmC,CAEzF,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,YAAY,CAAE,cAAAA,CAAA,CAAgE,IAAzD,CAAAC,IAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,IAAY,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAI,MAAe,CAAAJ,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACvE,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,eAAe,CAAC,CACjCP,IAAI,CAAEA,IAAI,CAACQ,QAAQ,CAAC,CAAC,CACrBJ,IAAI,CAAEA,IAAI,CAACI,QAAQ,CAAC,CACtB,CAAC,CAAC,CAEF,GAAIH,MAAM,CAAE,CACVC,MAAM,CAACG,MAAM,CAAC,QAAQ,CAAEJ,MAAM,CAAC,CACjC,CAEA,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,GAAG,CAAuB,mBAAmBL,MAAM,EAAE,CAAC,CACjF,MAAO,CAAAI,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,WAAW,CAAE,KAAO,CAAAC,EAAU,EAAK,CACjC,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,GAAG,CAAW,kBAAkBG,EAAE,EAAE,CAAC,CAChE,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAG,cAAc,CAAE,KAAO,CAAAH,IAAsB,EAAK,CAChD,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACsB,IAAI,CAAW,iBAAiB,CAAEJ,IAAI,CAAC,CAClE,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAK,cAAc,CAAE,KAAAA,CAAOH,EAAU,CAAEF,IAA+B,GAAK,CACrE,KAAM,CAAAF,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACwB,GAAG,CAAW,kBAAkBJ,EAAE,EAAE,CAAEF,IAAI,CAAC,CACtE,MAAO,CAAAF,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAO,cAAc,CAAE,KAAO,CAAAL,EAAU,EAAK,CACpC,KAAM,CAAApB,GAAG,CAAC0B,MAAM,CAAC,kBAAkBN,EAAE,EAAE,CAAC,CAC1C,CAAC,CAED;AACAO,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpB,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,GAAG,CAAgB,sBAAsB,CAAC,CACrE,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAU,SAAS,CAAG,CACvBC,KAAK,CAAE,KAAAA,CAAA,GAAY,CACjB,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}