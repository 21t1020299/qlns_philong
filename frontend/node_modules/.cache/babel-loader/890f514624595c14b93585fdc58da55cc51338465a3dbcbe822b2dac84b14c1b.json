{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://qlns-philong.onrender.com/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response, _error$config, _error$response2, _error$response3, _error$response4, _error$response5, _error$response6, _error$response6$data;\n  console.error(`❌ API Error: ${(_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status} ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}`, (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n\n  // Handle specific error cases\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n    throw new Error('Không tìm thấy dữ liệu');\n  } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 422) {\n    var _error$response$data;\n    // Validation errors\n    const validationErrors = (_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail;\n    if (Array.isArray(validationErrors)) {\n      const errorMessages = validationErrors.map(err => err.msg).join(', ');\n      throw new Error(`Lỗi validation: ${errorMessages}`);\n    }\n  } else if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) >= 500) {\n    throw new Error('Lỗi server, vui lòng thử lại sau');\n  } else if (error.code === 'NETWORK_ERROR') {\n    throw new Error('Không thể kết nối đến server');\n  }\n  throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || error.message || 'Có lỗi xảy ra');\n});\nexport const employeeAPI = {\n  // Get employees with pagination and search\n  getEmployees: async (params = {}) => {\n    const {\n      page = 1,\n      size = 10,\n      search = ''\n    } = params;\n    const response = await api.get('/employees/', {\n      params: {\n        page,\n        size,\n        search\n      }\n    });\n    return response.data;\n  },\n  // Get single employee by ID\n  getEmployee: async manv => {\n    const response = await api.get(`/employees/${manv}`);\n    return response.data;\n  },\n  // Create new employee\n  createEmployee: async employeeData => {\n    const response = await api.post('/employees/', employeeData);\n    return response.data;\n  },\n  // Update employee\n  updateEmployee: async (manv, employeeData) => {\n    const response = await api.put(`/employees/${manv}`, employeeData);\n    return response.data;\n  },\n  // Delete employee\n  deleteEmployee: async manv => {\n    await api.delete(`/employees/${manv}`);\n  },\n  // Get employee statistics\n  getStats: async () => {\n    const response = await api.get('/employees/stats');\n    return response.data;\n  }\n};\nexport const healthAPI = {\n  // Health check\n  checkHealth: async () => {\n    const response = await api.get('/health');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$config","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","data","Error","_error$response$data","validationErrors","detail","Array","isArray","errorMessages","map","err","msg","join","code","message","employeeAPI","getEmployees","params","page","size","search","get","getEmployee","manv","createEmployee","employeeData","post","updateEmployee","put","deleteEmployee","delete","getStats","healthAPI","checkHealth"],"sources":["/Users/jayceho/qlns_philong/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Employee, EmployeeFormData, EmployeeListResponse, EmployeeStats } from '../types/employee';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://qlns-philong.onrender.com/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error(`❌ API Error: ${error.response?.status} ${error.config?.url}`, error.response?.data);\n    \n    // Handle specific error cases\n    if (error.response?.status === 404) {\n      throw new Error('Không tìm thấy dữ liệu');\n    } else if (error.response?.status === 422) {\n      // Validation errors\n      const validationErrors = error.response.data?.detail;\n      if (Array.isArray(validationErrors)) {\n        const errorMessages = validationErrors.map((err: any) => err.msg).join(', ');\n        throw new Error(`Lỗi validation: ${errorMessages}`);\n      }\n    } else if (error.response?.status >= 500) {\n      throw new Error('Lỗi server, vui lòng thử lại sau');\n    } else if (error.code === 'NETWORK_ERROR') {\n      throw new Error('Không thể kết nối đến server');\n    }\n    \n    throw new Error(error.response?.data?.detail || error.message || 'Có lỗi xảy ra');\n  }\n);\n\nexport const employeeAPI = {\n  // Get employees with pagination and search\n  getEmployees: async (params: {\n    page?: number;\n    size?: number;\n    search?: string;\n  } = {}): Promise<EmployeeListResponse> => {\n    const { page = 1, size = 10, search = '' } = params;\n    const response = await api.get('/employees/', {\n      params: { page, size, search }\n    });\n    return response.data;\n  },\n\n  // Get single employee by ID\n  getEmployee: async (manv: string): Promise<Employee> => {\n    const response = await api.get(`/employees/${manv}`);\n    return response.data;\n  },\n\n  // Create new employee\n  createEmployee: async (employeeData: EmployeeFormData): Promise<Employee> => {\n    const response = await api.post('/employees/', employeeData);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (manv: string, employeeData: EmployeeFormData): Promise<Employee> => {\n    const response = await api.put(`/employees/${manv}`, employeeData);\n    return response.data;\n  },\n\n  // Delete employee\n  deleteEmployee: async (manv: string): Promise<void> => {\n    await api.delete(`/employees/${manv}`);\n  },\n\n  // Get employee statistics\n  getStats: async (): Promise<EmployeeStats> => {\n    const response = await api.get('/employees/stats');\n    return response.data;\n  },\n};\n\nexport const healthAPI = {\n  // Health check\n  checkHealth: async (): Promise<{ status: string; timestamp: string }> => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}