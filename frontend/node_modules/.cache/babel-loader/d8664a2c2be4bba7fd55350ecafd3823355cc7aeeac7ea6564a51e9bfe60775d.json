{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'https://qlns-philong.onrender.com/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor for logging\napi.interceptors.request.use(config=>{var _config$method;console.log(`🚀 API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`);return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{console.log(`✅ API Response: ${response.status} ${response.config.url}`);return response;},error=>{var _error$response,_error$config,_error$response2,_error$response3,_error$response4,_error$response5,_error$response6,_error$response6$data;console.error(`❌ API Error: ${(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status} ${(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url}`,(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data);// Handle specific error cases\nif(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===404){throw new Error('Không tìm thấy dữ liệu');}else if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===422){var _error$response$data;// Validation errors\nconst validationErrors=(_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail;if(Array.isArray(validationErrors)){const errorMessages=validationErrors.map(err=>err.msg).join(', ');throw new Error(`Lỗi validation: ${errorMessages}`);}}else if(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)>=500){throw new Error('Lỗi server, vui lòng thử lại sau');}else if(error.code==='NETWORK_ERROR'){throw new Error('Không thể kết nối đến server');}throw new Error(((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.detail)||error.message||'Có lỗi xảy ra');});export const employeeAPI={// Get employees with pagination and search\ngetEmployees:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{page=1,size=10,search=''}=params;const response=await api.get('/employees/',{params:{page,size,search}});return response.data;},// Get single employee by ID\ngetEmployee:async manv=>{const response=await api.get(`/employees/${manv}`);return response.data;},// Create new employee\ncreateEmployee:async employeeData=>{const response=await api.post('/employees/',employeeData);return response.data;},// Update employee\nupdateEmployee:async(manv,employeeData)=>{const response=await api.put(`/employees/${manv}`,employeeData);return response.data;},// Delete employee\ndeleteEmployee:async manv=>{await api.delete(`/employees/${manv}`);},// Get employee statistics\ngetStats:async()=>{const response=await api.get('/employees/stats');return response.data;}};export const healthAPI={// Health check\ncheckHealth:async()=>{const response=await api.get('/health');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","_error$config","_error$response2","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","data","Error","_error$response$data","validationErrors","detail","Array","isArray","errorMessages","map","err","msg","join","code","message","employeeAPI","getEmployees","params","arguments","length","undefined","page","size","search","get","getEmployee","manv","createEmployee","employeeData","post","updateEmployee","put","deleteEmployee","delete","getStats","healthAPI","checkHealth"],"sources":["/Users/jayceho/qlns_philong/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Employee, EmployeeFormData, EmployeeListResponse, EmployeeStats } from '../types/employee';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://qlns-philong.onrender.com/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Response: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error(`❌ API Error: ${error.response?.status} ${error.config?.url}`, error.response?.data);\n    \n    // Handle specific error cases\n    if (error.response?.status === 404) {\n      throw new Error('Không tìm thấy dữ liệu');\n    } else if (error.response?.status === 422) {\n      // Validation errors\n      const validationErrors = error.response.data?.detail;\n      if (Array.isArray(validationErrors)) {\n        const errorMessages = validationErrors.map((err: any) => err.msg).join(', ');\n        throw new Error(`Lỗi validation: ${errorMessages}`);\n      }\n    } else if (error.response?.status >= 500) {\n      throw new Error('Lỗi server, vui lòng thử lại sau');\n    } else if (error.code === 'NETWORK_ERROR') {\n      throw new Error('Không thể kết nối đến server');\n    }\n    \n    throw new Error(error.response?.data?.detail || error.message || 'Có lỗi xảy ra');\n  }\n);\n\nexport const employeeAPI = {\n  // Get employees with pagination and search\n  getEmployees: async (params: {\n    page?: number;\n    size?: number;\n    search?: string;\n  } = {}): Promise<EmployeeListResponse> => {\n    const { page = 1, size = 10, search = '' } = params;\n    const response = await api.get('/employees/', {\n      params: { page, size, search }\n    });\n    return response.data;\n  },\n\n  // Get single employee by ID\n  getEmployee: async (manv: string): Promise<Employee> => {\n    const response = await api.get(`/employees/${manv}`);\n    return response.data;\n  },\n\n  // Create new employee\n  createEmployee: async (employeeData: EmployeeFormData): Promise<Employee> => {\n    const response = await api.post('/employees/', employeeData);\n    return response.data;\n  },\n\n  // Update employee\n  updateEmployee: async (manv: string, employeeData: EmployeeFormData): Promise<Employee> => {\n    const response = await api.put(`/employees/${manv}`, employeeData);\n    return response.data;\n  },\n\n  // Delete employee\n  deleteEmployee: async (manv: string): Promise<void> => {\n    await api.delete(`/employees/${manv}`);\n  },\n\n  // Get employee statistics\n  getStats: async (): Promise<EmployeeStats> => {\n    const response = await api.get('/employees/stats');\n    return response.data;\n  },\n};\n\nexport const healthAPI = {\n  // Health check\n  checkHealth: async (): Promise<{ status: string; timestamp: string }> => {\n    const response = await api.get('/health');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}