package utils;

import java.sql.Connection;
import java.sql.DriverManager;

public class ConnectorDB {
    private static Connection connection;
    private static boolean useMockDatabase = false;

    // C·∫•u h√¨nh Supabase
    private static final String SUPABASE_HOST = "wsisepsdhioaikdzrnmd.supabase.co";
    private static final int SUPABASE_PORT = 5432;
    private static final String SUPABASE_DATABASE = "postgres";
    private static final String SUPABASE_USER = "postgres";
    private static final String SUPABASE_PASSWORD = "kiemdinhnhom6";
    
    // C·∫•u h√¨nh Local PostgreSQL
    private static final String LOCAL_HOST = "localhost";
    private static final int LOCAL_PORT = 5432;
    private static final String LOCAL_DATABASE = "qlns_philong";
    private static final String LOCAL_USER = "postgres";
    private static final String LOCAL_PASSWORD = "password";

    static {
        try {
            System.out.println("üîç ƒêang th·ª≠ k·∫øt n·ªëi database...");
            
            Class.forName("org.postgresql.Driver");
            
            // Th·ª≠ k·∫øt n·ªëi Supabase tr∆∞·ªõc
            try {
                System.out.println("\nüì° Th·ª≠ k·∫øt n·ªëi Supabase...");
                String supabaseUrl = "jdbc:postgresql://" + SUPABASE_HOST + ":" + SUPABASE_PORT + "/" + SUPABASE_DATABASE;
                System.out.println("URL: " + supabaseUrl);
                connection = DriverManager.getConnection(supabaseUrl, SUPABASE_USER, SUPABASE_PASSWORD);
                System.out.println("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng t·ªõi Supabase!");
            } catch (Exception e) {
                System.out.println("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi Supabase: " + e.getMessage());
                
                // Th·ª≠ k·∫øt n·ªëi Local database
                try {
                    System.out.println("\nüì° Th·ª≠ k·∫øt n·ªëi Local Database...");
                    String localUrl = "jdbc:postgresql://" + LOCAL_HOST + ":" + LOCAL_PORT + "/" + LOCAL_DATABASE;
                    System.out.println("URL: " + localUrl);
                    connection = DriverManager.getConnection(localUrl, LOCAL_USER, LOCAL_PASSWORD);
                    System.out.println("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng t·ªõi Local Database!");
                } catch (Exception e2) {
                    System.out.println("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi Local Database: " + e2.getMessage());
                    
                    // Th·ª≠ k·∫øt n·ªëi H2 Database
                    try {
                        System.out.println("\nüì° Th·ª≠ k·∫øt n·ªëi H2 Database...");
                        Class.forName("org.h2.Driver");
                        connection = H2Connector.getConnection();
                        if (connection != null) {
                            System.out.println("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng t·ªõi H2 Database!");
                        } else {
                            throw new Exception("H2 connection is null");
                        }
                    } catch (Exception e3) {
                        System.out.println("‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi H2 Database: " + e3.getMessage());
                        
                        // N·∫øu c·∫£ ba ƒë·ªÅu th·∫•t b·∫°i, s·ª≠ d·ª•ng Mock Database
                        System.out.println("\nüîß Chuy·ªÉn sang s·ª≠ d·ª•ng Mock Database");
                        connection = null;
                        useMockDatabase = true;
                    }
                }
            }
            
        } catch (Exception e) {
            System.out.println("‚ùå L·ªói kh·ªüi t·∫°o database: " + e.getMessage());
            connection = null;
            useMockDatabase = true;
        }
    }

    public static Connection getConnection() {
        return connection;
    }
    
    public static boolean isUsingMockDatabase() {
        return useMockDatabase;
    }
}
