package utils;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class H2DatabaseViewer {
    public static void main(String[] args) {
        try {
            System.out.println("üîç ƒêang k·∫øt n·ªëi H2 Database...");
            Class.forName("org.h2.Driver");
            Connection conn = DriverManager.getConnection("jdbc:h2:./qlns_philong", "sa", "");
            
            System.out.println("‚úÖ K·∫øt n·ªëi th√†nh c√¥ng!");
            System.out.println("\nüìä D·ªØ li·ªáu trong b·∫£ng nhanvien:");
            System.out.println("=" .repeat(80));
            
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM nhanvien ORDER BY manv");
            
            int count = 0;
            while (rs.next()) {
                count++;
                System.out.println("\nüë§ Nh√¢n vi√™n " + count + ":");
                System.out.println("   M√£ NV: " + rs.getString("manv"));
                System.out.println("   H·ªç t√™n: " + rs.getString("tennv"));
                System.out.println("   Gi·ªõi t√≠nh: " + rs.getString("gtinh"));
                System.out.println("   Email: " + rs.getString("email"));
                System.out.println("   Ng√†y sinh: " + rs.getDate("ngsinh"));
                System.out.println("   SƒêT: " + rs.getString("sdt"));
                System.out.println("   ƒê·ªãa ch·ªâ: " + rs.getString("dchi"));
                System.out.println("   Ch·ª©c v·ª•: " + rs.getString("macv"));
                System.out.println("   D√¢n t·ªôc: " + rs.getString("dtoc"));
                System.out.println("   Qu·ªëc t·ªãch: " + rs.getString("qtich"));
                System.out.println("   Tr√¨nh ƒë·ªô: " + rs.getString("trinhdo"));
                System.out.println("   S·ª©c kh·ªèe: " + rs.getString("skhoe"));
                System.out.println("   N∆°i ƒêK HKTT: " + rs.getString("noidkhktt"));
                System.out.println("   ƒê·ªãa ch·ªâ th∆∞·ªùng tr√∫: " + rs.getString("dchithuongtru"));
                System.out.println("   H·ªç t√™n cha: " + rs.getString("hotencha"));
                System.out.println("   H·ªç t√™n m·∫π: " + rs.getString("hotenme"));
                System.out.println("   ·∫¢nh ch√¢n dung: " + rs.getString("anhchandung"));
                System.out.println("   ·∫¢nh CMND: " + rs.getString("anhcmnd"));
                System.out.println("-" .repeat(40));
            }
            
            System.out.println("\nüìà T·ªïng s·ªë nh√¢n vi√™n: " + count);
            
            // Ki·ªÉm tra schema
            System.out.println("\nüîß Th√¥ng tin schema:");
            ResultSet schemaRs = stmt.executeQuery("SELECT COLUMN_NAME, DATA_TYPE, IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'NHANVIEN' ORDER BY ORDINAL_POSITION");
            System.out.println("   C·ªôt\t\t\tKi·ªÉu d·ªØ li·ªáu\t\tCho ph√©p NULL");
            System.out.println("-" .repeat(60));
            while (schemaRs.next()) {
                String colName = schemaRs.getString("COLUMN_NAME");
                String dataType = schemaRs.getString("DATA_TYPE");
                String isNullable = schemaRs.getString("IS_NULLABLE");
                System.out.printf("   %-20s %-15s %s%n", colName, dataType, isNullable);
            }
            
            conn.close();
            System.out.println("\n‚úÖ Ho√†n th√†nh!");
            
        } catch (Exception e) {
            System.out.println("‚ùå L·ªói: " + e.getMessage());
            e.printStackTrace();
        }
    }
}